version: 2.1

workflows:
  version: 2
  build:
    jobs:
    - build_php:
        matrix:
          parameters:
            version:
            - "8.0"
            - "8.1"
            - "8.2"
            - "8.4"
            tag_suffix:
            - ""
            - "-fpm"
  nightly:
    triggers:
    - schedule:
        cron: "0 2 * * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - build_php:
        matrix:
          parameters:
            version:
            - "8.0"
            - "8.1"
            - "8.2"
            - "8.4"
            tag_suffix:
            - ""
            - "-fpm"

jobs:

  build_php:
    parameters:
      version:
        type: string
      tag_suffix:
        type: string
    docker:
    - image: cimg/base:stable
    steps:
    - checkout
    - setup_remote_docker:
        version: edge
    - install_docker_buildx
    - docker_login
    - run:
        name: Build PHP Docker image
        command: |
          set -exo pipefail
          export VERSION=<< parameters.version >>
          export TAG_SUFFIX=<< parameters.tag_suffix >>
          export DOCKER_BUILDKIT=1
          sed -i 's|php/8\.0/fpm|php/${VERSION}/fpm|g' php/php-fpm.conf
          if docker pull "jakubkulhan/php:${VERSION}${TAG_SUFFIX}" &> /dev/null; then
            export CURRENT_VERSION=$(docker run --rm --entrypoint=php "jakubkulhan/php:${VERSION}${TAG_SUFFIX}" -r 'echo PHP_VERSION;')
          else
            export CURRENT_VERSION=none
          fi
          docker build --progress plain --tag jakubkulhan/php:build -f php/${VERSION}${TAG_SUFFIX}/Dockerfile php
          export NEW_VERSION=$(docker run --rm --entrypoint=php jakubkulhan/php:build -r 'echo PHP_VERSION;')
          # Only push if not already built
          if [ "$NEW_VERSION" == "$CURRENT_VERSION" ]; then
            echo "Already built: $NEW_VERSION"
          else
            docker buildx build \
              --progress plain \
              --tag jakubkulhan/php:$(docker run --rm --entrypoint=php jakubkulhan/php:build -r 'printf("%d.%d.%d", PHP_MAJOR_VERSION, PHP_MINOR_VERSION, PHP_RELEASE_VERSION);')$TAG_SUFFIX \
              --tag jakubkulhan/php:$(docker run --rm --entrypoint=php jakubkulhan/php:build -r 'printf("%d.%d", PHP_MAJOR_VERSION, PHP_MINOR_VERSION);')$TAG_SUFFIX \
              --platform linux/amd64,linux/arm64/v8 \
              --push \
              -f php/${VERSION}${TAG_SUFFIX}/Dockerfile \
              php
          fi

commands:
  install_docker_buildx:
    steps:
    - run:
        name: Install Docker Buildx
        command: |
          mkdir -p ~/.docker/cli-plugins/
          wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.25.0/buildx-v0.25.0.linux-amd64
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker buildx version
          sudo apt-get update && sudo apt-get install -y binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --privileged --rm tonistiigi/binfmt --install arm64
          docker context create buildcontext
          docker buildx create buildcontext --use
  docker_login:
    steps:
    - run:
        name: Log in to Docker Hub
        command: |
          docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
